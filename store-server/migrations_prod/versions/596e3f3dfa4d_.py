"""empty message

Revision ID: 596e3f3dfa4d
Revises: 1ac2fa705d52
Create Date: 2018-07-14 18:06:56.071234

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '596e3f3dfa4d'
down_revision = '1ac2fa705d52'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('form_id',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('form_id', sa.String(), nullable=True),
    sa.Column('app_id', sa.String(), nullable=True),
    sa.Column('open_id', sa.String(), nullable=True),
    sa.Column('expire_at', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_id_expire_at'), 'form_id', ['expire_at'], unique=False)
    op.create_index(op.f('ix_form_id_open_id'), 'form_id', ['open_id'], unique=False)
    op.create_table('lesson_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('coach_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('executed_at', sa.DateTime(), nullable=True),
    sa.Column('charge', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lesson_record_customer_id'), 'lesson_record', ['customer_id'], unique=False)
    op.create_table('wx_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('app_id', sa.String(), nullable=True),
    sa.Column('open_id', sa.String(), nullable=True),
    sa.Column('task', sa.String(), nullable=True),
    sa.Column('publish_at', sa.DateTime(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('executed_at', sa.DateTime(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wx_message_open_id'), 'wx_message', ['open_id'], unique=False)
    op.create_table('wx_msg_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('app_id', sa.String(), nullable=True),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('short_id', sa.String(), nullable=True),
    sa.Column('keyword_id_list', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wx_msg_template_app_id'), 'wx_msg_template', ['app_id'], unique=False)
    op.drop_table('private_lesson')
    op.add_column('coach', sa.Column('exp_reservation', sa.Boolean(), nullable=True))
    op.alter_column('customer', 'biz_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('customer', 'w_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('seat', sa.Column('canceled_at', sa.DateTime(), nullable=True))
    op.add_column('seat', sa.Column('is_valid', sa.Boolean(), nullable=True))
    op.add_column('seat', sa.Column('priority', sa.Integer(), nullable=True))
    op.add_column('seat', sa.Column('status', sa.Integer(), nullable=True))
    op.add_column('seat', sa.Column('yymmdd', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_seat_customer_id'), 'seat', ['customer_id'], unique=False)
    op.create_index(op.f('ix_seat_yymmdd'), 'seat', ['yymmdd'], unique=False)
    op.drop_index('ix_seat_day', table_name='seat')
    op.drop_column('seat', 'day')
    op.drop_column('seat', 'is_confirmed')
    op.drop_column('seat', 'is_break')
    op.add_column('store_biz', sa.Column('name', sa.String(), nullable=True))
    op.drop_constraint('store_biz_wx_authorizer_id_key', 'store_biz', type_='unique')
    op.drop_constraint('store_biz_wx_authorizer_id_fkey', 'store_biz', type_='foreignkey')
    op.drop_column('store_biz', 'release')
    op.drop_column('store_biz', 'set_template_time')
    op.drop_column('store_biz', 'wx_authorizer_id')
    op.drop_column('store_biz', 'related_biz_id')
    op.drop_column('store_biz', 'auto_release')
    op.drop_column('store_biz', 'check_info_result')
    op.drop_column('store_biz', 'set_db')
    op.drop_column('store_biz', 'set_db_time')
    op.drop_column('store_biz', 'submit_result')
    op.drop_column('store_biz', 'audit_time')
    op.drop_column('store_biz', 'commit_time')
    op.drop_column('store_biz', 'release_result')
    op.drop_column('store_biz', 'check_info_time')
    op.drop_column('store_biz', 'set_db_result')
    op.drop_column('store_biz', 'commit')
    op.drop_column('store_biz', 'submit')
    op.drop_column('store_biz', 'template_id')
    op.drop_column('store_biz', 'set_template_result')
    op.drop_column('store_biz', 'audit_result')
    op.drop_column('store_biz', 'commit_result')
    op.drop_column('store_biz', 'submit_time')
    op.drop_column('store_biz', 'release_time')
    op.drop_column('store_biz', 'set_template')
    op.add_column('store_template', sa.Column('app_mark', sa.Integer(), nullable=True))
    op.add_column('trainee', sa.Column('age', sa.Integer(), nullable=True))
    op.add_column('trainee', sa.Column('gender', sa.Integer(), nullable=True))
    op.add_column('trainee', sa.Column('is_bind', sa.Boolean(), nullable=True))
    op.add_column('trainee', sa.Column('note', sa.JSON(), nullable=True))
    op.add_column('trainee', sa.Column('phone_number', sa.String(), nullable=True))
    op.add_column('trainee', sa.Column('tags', sa.JSON(), nullable=True))
    op.add_column('trainee', sa.Column('total_lessons', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_trainee_customer_id'), 'trainee', ['customer_id'], unique=False)
    op.drop_column('trainee', 'remained_lessons')
    op.add_column('wx_authorizer', sa.Column('audit_result', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('audit_time', sa.DateTime(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('auto_release', sa.Boolean(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('biz_id', sa.Integer(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('check_info_result', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('check_info_time', sa.DateTime(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('commit', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('commit_result', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('commit_time', sa.DateTime(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('mark', sa.Integer(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('release', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('release_result', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('release_time', sa.DateTime(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('set_db', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('set_db_result', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('set_db_time', sa.DateTime(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('set_template', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('set_template_result', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('set_template_time', sa.DateTime(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('submit', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('submit_result', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('wx_authorizer', sa.Column('submit_time', sa.DateTime(), nullable=True))
    op.add_column('wx_authorizer', sa.Column('template_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_wx_authorizer_biz_id'), 'wx_authorizer', ['biz_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_wx_authorizer_biz_id'), table_name='wx_authorizer')
    op.drop_column('wx_authorizer', 'template_id')
    op.drop_column('wx_authorizer', 'submit_time')
    op.drop_column('wx_authorizer', 'submit_result')
    op.drop_column('wx_authorizer', 'submit')
    op.drop_column('wx_authorizer', 'set_template_time')
    op.drop_column('wx_authorizer', 'set_template_result')
    op.drop_column('wx_authorizer', 'set_template')
    op.drop_column('wx_authorizer', 'set_db_time')
    op.drop_column('wx_authorizer', 'set_db_result')
    op.drop_column('wx_authorizer', 'set_db')
    op.drop_column('wx_authorizer', 'release_time')
    op.drop_column('wx_authorizer', 'release_result')
    op.drop_column('wx_authorizer', 'release')
    op.drop_column('wx_authorizer', 'mark')
    op.drop_column('wx_authorizer', 'commit_time')
    op.drop_column('wx_authorizer', 'commit_result')
    op.drop_column('wx_authorizer', 'commit')
    op.drop_column('wx_authorizer', 'check_info_time')
    op.drop_column('wx_authorizer', 'check_info_result')
    op.drop_column('wx_authorizer', 'biz_id')
    op.drop_column('wx_authorizer', 'auto_release')
    op.drop_column('wx_authorizer', 'audit_time')
    op.drop_column('wx_authorizer', 'audit_result')
    op.add_column('trainee', sa.Column('remained_lessons', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_trainee_customer_id'), table_name='trainee')
    op.drop_column('trainee', 'total_lessons')
    op.drop_column('trainee', 'tags')
    op.drop_column('trainee', 'phone_number')
    op.drop_column('trainee', 'note')
    op.drop_column('trainee', 'is_bind')
    op.drop_column('trainee', 'gender')
    op.drop_column('trainee', 'age')
    op.drop_column('store_template', 'app_mark')
    op.add_column('store_biz', sa.Column('set_template', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('release_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('submit_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('commit_result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('audit_result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('set_template_result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('template_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('submit', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('commit', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('set_db_result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('check_info_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('release_result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('commit_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('audit_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('submit_result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('set_db_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('set_db', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('check_info_result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('auto_release', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('related_biz_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('wx_authorizer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('set_template_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('store_biz', sa.Column('release', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_foreign_key('store_biz_wx_authorizer_id_fkey', 'store_biz', 'wx_authorizer', ['wx_authorizer_id'], ['id'])
    op.create_unique_constraint('store_biz_wx_authorizer_id_key', 'store_biz', ['wx_authorizer_id'])
    op.drop_column('store_biz', 'name')
    op.add_column('seat', sa.Column('is_break', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('seat', sa.Column('is_confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('seat', sa.Column('day', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_index('ix_seat_day', 'seat', ['day'], unique=False)
    op.drop_index(op.f('ix_seat_yymmdd'), table_name='seat')
    op.drop_index(op.f('ix_seat_customer_id'), table_name='seat')
    op.drop_column('seat', 'yymmdd')
    op.drop_column('seat', 'status')
    op.drop_column('seat', 'priority')
    op.drop_column('seat', 'is_valid')
    op.drop_column('seat', 'canceled_at')
    op.alter_column('customer', 'w_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('customer', 'biz_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('coach', 'exp_reservation')
    op.create_table('private_lesson',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('coach_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('attend_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='private_lesson_pkey')
    )
    op.drop_index(op.f('ix_wx_msg_template_app_id'), table_name='wx_msg_template')
    op.drop_table('wx_msg_template')
    op.drop_index(op.f('ix_wx_message_open_id'), table_name='wx_message')
    op.drop_table('wx_message')
    op.drop_index(op.f('ix_lesson_record_customer_id'), table_name='lesson_record')
    op.drop_table('lesson_record')
    op.drop_index(op.f('ix_form_id_open_id'), table_name='form_id')
    op.drop_index(op.f('ix_form_id_expire_at'), table_name='form_id')
    op.drop_table('form_id')
    # ### end Alembic commands ###
